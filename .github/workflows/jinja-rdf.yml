name: Build and Deploy Static RDF Site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python Requirements
        run: |
          pip install -r requirements.txt
      - name: Install themes
        run: |
          make install_templates
      - name: Install dependencies
        run: |
          sudo apt-get install openjdk-21-jdk
      - name: Install Apache Jena
        run: |
          curl --location --silent --show-error --fail --retry-connrefused --retry 3 --output jena.tar.gz https://archive.apache.org/dist/jena/binaries/apache-jena-5.4.0.tar.gz
          tar zxf jena.tar.gz
          sudo mv apache-jena* /opt/jena
          echo "/opt/jena/bin" >> $GITHUB_PATH
          rm jena.tar.gz
      - name: Test Apache Installation
        run: |
          riot --version
      - name: Build source RDF
        run: |
          make data/temp/all.nt
      - name: Set up Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jinja-RDF
        # Outputs to the './_site' directory by default
        run: make generate
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
